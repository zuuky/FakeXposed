ext {
    props = new Properties()
    if (project.hasProperty('configPath')) {
        props.load(new FileInputStream(configPath))
    } else if (project.file('local.properties').exists()) {
        props.load(new FileInputStream(project.file('local.properties')))
    }

    project.hasProperty('buildApi') && (props['buildApi'] = buildApi.toInteger())
    project.hasProperty('mergeBuild') && (props['mergeBuild'] = mergeBuild)
    project.hasProperty('logLevel') && (props['logLevel'] = logLevel.toInteger())

    if (props['appType'] && props['appType'].toString().equals('x86')) {
        props['abis'] = ['x86', 'x86_64']
    } else if (props['appType'] && props['appType'].toString().equals('arm')) {
        props['abis'] = ['armeabi-v7a', 'arm64-v8a']
    } else {
        props['appType'] = 'all'
        props['abis'] = ['armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64']
    }

    props['hasSign'] = props['storeFile']?.trim() && props['storePassword']?.trim() && props['keyAlias']?.trim() && props['keyPassword']?.trim()
    targetSdk = props['targetSdk'].toInteger()
    props['buildApi'] = props['buildApi']
    props['buildApi'] = props['buildApi'].toInteger()
    props['logLevel'] = props['logLevel'] ?: 5
    props['logLevel'] = props['logLevel'].toInteger()
    props['mergeBuild'] = props['mergeBuild'] ?: true
    props['mergeBuild'] = props['mergeBuild'].toBoolean()
    println props
}

buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
    }
}

allprojects {
    repositories {
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}